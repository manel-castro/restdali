# This is a basic workflow to help you get started with Actions
# FOLLOWED GUIDE! https://learn.microsoft.com/en-us/training/modules/aks-deployment-pipeline-github-actions/10-exercise-deploy-workflow
# To connect Azure kubectl: https://learn.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-cli#connect-to-the-cluster

name: Build and push the latest build to staging

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [master]
    paths:
      - "be-backoffice/**"
  pull_request:
    branches: [master]
    paths:
      - "be-backoffice/**"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        uses: docker/login-action@v2.2.0
        with:
          username: manelcastro
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./be-backoffice
          push: true
          tags: manelcastro/be-backoffice

  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image # Will wait for the execution of the previous job

    steps:
      - uses: actions/checkout@v2

      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1

      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          # Resource Group Name
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          # AKS Cluster Name
          cluster-name: ${{ secrets.AZURE_CLUSTER_NAME }}
          # AKS Cluster Subscription
          creds: ${{ secrets.AZURE_CREDENTIALS }}

        # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ./infrastructure/k8s/be-backoffice.yml

      - run: kubectl rollout restart deployment/be-backoffice-depl
